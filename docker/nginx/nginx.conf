load_module modules/ngx_http_image_filter_module.so;
worker_processes auto;

pid /tmp/nginx.pid;

events {
}

http {
        add_header Cache-Control "no-store, no-cache, must-revalidate, max-age=0";
        gzip on;
        include mime.types;

upstream balans {
        server 127.0.0.1:8080; 
        server 127.0.0.1:8081; 
}

server {
		add_header Cache-Control "no-store, no-cache, must-revalidate, max-age=0";
		gzip on;		

                #listen 443 ssl; # managed by Certbot
		
		listen 80;		

		#ssl_certificate /etc/ssl/private/fullchain.pem;
        	#ssl_certificate_key /etc/ssl/private/privkey.pem;
                
                server_name nginx.ddns.net;

                location / {
                        root /usr/share/nginx/html;
                        index index.html;
                }

                location /secondpage {
                        root /usr/share/nginx/image;
                        try_files /chel.jpg =404;
		}
                location /music {
                        root /usr/share/nginx/sounds;
                        try_files /дин_визель_Niggers_meme_clash_of_clans_EEMUSIC_ru.mp3 =404;
                        add_header Content-Disposition "attachment; filename=song.mp3";
                }

                location /info.php{
			proxy_pass http://apache_info:8888/;
                }
                location /secondserver {
                        return 301 https://www.youtube.com/watch?v=dQw4w9WgXcQ;
                }

                location /balans {
                      proxy_pass http://balans;
		}

                location ~* \.jpg{
                        rewrite ^ /image1 permanent;
                }

                location ~* \.png{
                        rewrite ^ /image2 permanent;
                }

                location /image1 {
                        root /usr/share/nginx/image;
                        try_files /evlhg3zrv7491.jpg =404;
                        image_filter rotate 180;
                }

                location /image2 {
                        root /usr/share/nginx/image;
                        try_files /png.png =404;
                }

		location /cpu{
			add_header Refresh "3";
			alias /usr/share/nginx/cpu.sh;
			include fastcgi_params;
			fastcgi_pass  unix:/run/fcgiwrap.socket;
			fastcgi_param SCRIPT_FILENAME /usr/share/nginx/cpu.sh;
		}
		
		location /400 {
			return 404;
		}
		
		location /500 {
			return 502;
		}

        }

#server {
#                if ($host = nginx.ddns.net) {
#                       return 301 https://$host$request_uri;
#                }


#                listen 80;
#                server_name nginx.ddns.net;

#}
}
